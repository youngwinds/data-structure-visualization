const path = require('path');
const fs = require('fs');

/**
 * 为public/docs下的所有文件创建路由
 * @param {string} rootPath 文件夹目录路径
 * @param {string} key 路由对应的唯一key，用于国际化
 * @param {string} routePath 路由对应的路径
 */
function createRoutes(rootPath, key, routePath) {
  const result = fs.readdirSync(rootPath).map((dir) => {
    const dirInfo = fs.statSync(path.join(rootPath, dir));

    // 如果存在code文件，则表明当前目录是叶结点。
    const isLeaf = fs.existsSync(path.join(rootPath, dir, 'code.js'));

    if (dirInfo.isDirectory() && !isLeaf) {
      // 如果是非叶目录, 继续递归创建。
      const children = createRoutes(
        path.join(rootPath, dir),
        `${key + dir}_`,
        `${routePath}/${dir}`,
      );

      return {
        key: key + dir,
        children: children,
      };
    } else if (dirInfo.isDirectory() && isLeaf) {
      // 当前目录是叶目录，得到最后结果
      return {
        key: key + dir,
        path: `${routePath}_${dir}`,
      };
    }
  });

  return result;
}

/**
 * 根据路由生成路由配置项
 * @param {object} routes
 */
function createFiles(routes) {
  routes.map((content) => {
    const rootPath = path.resolve(__dirname, `../../src/routes/${content.key}`);
    if (!fs.existsSync(rootPath)) {
      fs.mkdirSync(rootPath);
    }

    const fileName = content.key.split('-') + 'Menu';
    const filePath = rootPath + '/index.ts';
    const fileConent = `// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.\nimport { IMenu } from '@dsv-website/typings/IMenu';\n\nexport const ${fileName} : IMenu =  ${JSON.stringify(
      content.children,
      undefined,
      2,
    )}`;

    fs.writeFile(filePath, fileConent, function (error) {
      if (error) {
        console.error(`Error: generators routes${content.key}`);
      }
      console.log('\x1b[32m%s\x1b[0m', 'Generate Successful: ' + content.key);
    });
  });
}

function generateRoutes(path) {
  fs.access(path, fs.constants.R_OK | fs.constants.W_OK, (err) => {
    console.log('\x1b[35m%s\x1b[0m', 'Start GenerateRoutes');

    if (err) {
      throw err;
    }

    const routes = createRoutes(path, '', '');
    createFiles(routes);
  });
}

const rootPath = path.join(__dirname, '../../public/docs');

generateRoutes(rootPath);
